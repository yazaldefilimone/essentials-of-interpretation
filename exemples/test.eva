(var result ((lambda (x) (+ x x))  10))
(print result)

(var some (lambda (x) (+ x x)))
(print "some is:" (some 10))


(class Point null
  (begin
    (def constructor (this x y)
      (begin
        (set (prop this x) x)
        (set (prop this y) y)
          )
        )
    (def calc (this)
      (+ (prop this x) (prop this y))
    )
  )
)

(class Point3D Point
  (begin
    (def constructor (this x y z) 
      (begin
          ((prop (super Point3D) constructor) this x y)
          (set (prop this z) z))
            )

    (def calc (this)
      (+ ((prop (super Point3D) calc) this)
          (prop this z))
    )
  )
)

(var p (new Point3D 20 20 30))

(print "P: " ((prop p calc) p))


(import Math)

(print  "abs: " ((prop Math abs) (- 10)))